.root {
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  -webkit-transition: -webkit-transition .5s ease-in-out; /* Safari */
  transition: .5s ease-in-out all;
  min-height: calc(100vh - 64px);
  min-width: 100%;
  background-color: #fefefe;
}
.QuestionContainer {
  display:flex;
  justify-items: center;
}


.show {
  opacity: 1;
  pointer-events: all;
}

.question-text div, .mat-card-header-text {
  margin:0!important;
}

.hide {
  opacity: 0;
  pointer-events: none;
}

.root-card {
  -webkit-transition: -webkit-transition .4s ease-in-out; /* Safari */
  transition: .4s ease-in-out all;
}

i {
  font-size: 3em;
}

mat-card-header {
  display: flex;
  justify-content: center;
  align-items: center;
}

.main-card-content {
  display: flex;
  justify-content: center;
  align-items: center;
}

.input-field {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}

.answer {
  transition-property: transform,box-shadow,-webkit-transform;
  transition-duration: .25s;
  transition-timing-function: cubic-bezier(.4,0,.2,1);
  transition-delay: 0s;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  box-sizing: border-box;
  overflow: hidden;
  cursor:pointer;
  border: none;
  width:300px;
  margin:5px;


  box-shadow: none;
}

.answer:hover {
  box-shadow: 0 6px 6px -3px rgba(0,0,0,.2),0 10px 14px 1px rgba(0,0,0,.14),0 4px 18px 3px rgba(0,0,0,.12) !important;
  -webkit-transform: translateY(-10px);
  transform: translateY(-10px);
}

img {
  width: 125px;
  height: auto;
}

.question-text {
  text-align: center;
  max-width: 1360px;
  font-size: 3em;
  margin-bottom: 0.3em;
  font-family: Roboto,"Helvetica Neue",sans-serif;
}

.answer-text {
  font-size: 1.5em;
}

@media (max-width:768px) {
  .question-text {
    font-size:1.5em;
  }

  .QuestionContainer {
    flex-wrap:wrap;
  }

  mat-card {
    display:flex;
    flex:1;
    flex-wrap: wrap;
  }

  .answer {
    margin:2px;
    width:unset;
    flex:1;
    flex-wrap: wrap;
    display:flex;
  }

  .answer {
    overflow:unset;
  }

}

.twister {
  animation: rotate 10s ease-in-out 0s;
}

@keyframes rotate {
  from { transform: rotate(0deg); }
  to { transform: rotate(9999deg); }
}
